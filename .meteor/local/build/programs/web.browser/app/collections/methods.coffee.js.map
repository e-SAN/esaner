)]}'
{"version":3,"file":"/collections/methods.coffee.js","sources":["methods.coffee"],"names":[],"mappings":";AAAA,MAAM,CAAC,OAAP,CAEC;eAAY,SAAC,EAAD;AAEX;YAAQ,CAAC,KAAK,CAAC,IAAN,CAAW;WAAK,EAAL;KAAX,CAAD,CAAoB,CAAC,KAArB,EAAR;IACA,SAAS,KAAM,GAAE,CAAC,KADlB;IAEA,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAb,CAAkB;WAAK,MAAL;KAAlB,CAAD,CAA+B,CAAC,KAAhC,EAAwC,GAF9C;IAGA,OAAO,CAAC,GAAR,mCAAwB,GAAE,CAAC,gBAA3B,CAHA;IAIA,GAAG,CAAC,MAAO,GAAE,CAAC,OAJd;AAKA,QAAG,WAAH;AACC,UAAG,mBAAH;eACC,GAAG,CAAC,OAAO,CAAC,KADb;;mDAGa,GAAE,CAAC,iBAHhB;OADD;;aAMC,OAND;KAPW;GAAZ;EAeA,WAAU,SAAC,QAAD,EAAW,OAAX;AACT,QAAG,SAAS,QAAT,CAAH;aACC,KAAK,CAAC,MAAN,CACC;kBAAU,OAAV;QACA,IAAI,QADJ;OADD,EADD;KADS;GAfV;EAqBA,cAAa,SAAC,QAAD,EAAW,OAAX;AACZ,QAAG,aAAY,KAAf;aACC,KAAK,CAAC,MAAN,CACC;kBAAU,OAAV;OADD,EADD;KADY;GArBb;EA0BA,WAAU,SAAC,OAAD;AACT;eAAW,MAAM,CAAC,IAAP,EAAa,CAAC,QAAzB;AACA,iBAAO,CAAS,QAAT,CAAP;AACC,aADD;KADA;IAGA,OAAW,UAHX;IAIA,MAAM,OAAO,CAAC,MAJd;IAKA,OAAO;MACN,OAAO,OAAO,CAAC,KADT;MAEN,SAAS,OAAO,CAAC,OAFX;MAGN,OAAO,QAHD;MAIN,MAAM,IAJA;MAKN,QAAQ,GALF;KALP;AAaA,QAAG,WAAH;AACC,WAAK,CAAC,MAAN,CAAa,GAAb,EACC;cAAM;2BAAiB,IAAjB;SAAN;OADD,EADD;;AAKC,UAAI,CAAC,eAAL,GAAuB,IAAvB,CALD;KAbA;WAoBA,KAAK,CAAC,MAAN,CAAa,IAAb,EArBS;GA1BV;EAkDA,cAAa,SAAC,EAAD;WACZ,KAAK,CAAC,MAAN,CAAa;WAAI,EAAJ;KAAb,EADY;GAlDb;EAqDA,kBAAiB;WAChB,KAAK,CAAC,MAAN,CAAa,EAAb,EADgB;GArDjB;CAFD;;AAyDA;;;;;GAzDA;A","sourcesContent":["Meteor.methods\n\t# {content:'',owner:'',date:'',parent:''}\n\t'postOwner':(id) ->\n\t\t# this doesn't work\n\t\tposts = (Posts.find _id: id).fetch()\n\t\tuserid = posts[0].owner\n\t\tusr = (Meteor.users.find _id: userid).fetch()[0]\n\t\tconsole.log usr.emails?[0].address\n\t\tusr.emails[0].address\n\t\tif usr? \n\t\t\tif usr.profile? \n\t\t\t\tusr.profile.name \n\t\t\telse \n\t\t\t\tusr.emails?[0].address\n\t\telse\n\t\t\tuserid \n\t\t\n\t'addUser':(username, newname)->\n\t\tif approved username\n\t\t\tWList.insert \n\t\t\t\tusername: newname \n\t\t\t\tby: username\n\n\t'removeUser':(username, thename)->\n\t\tif username is 'J.K'\n\t\t\tWList.remove \n\t\t\t\tusername: thename \n\t\t\n\t'addPost':(options)->\n\t\tusername = Meteor.user().username\n\t\tunless approved username\n\t\t\treturn\n\t\tdate = new Date()\n\t\tpid = options.parent\n\t\tpost = {\n\t\t\ttitle: options.title\n\t\t\tcontent: options.content\n\t\t\towner: username #\"#{Meteor.user().username}(#{Meteor.user().emails[0].address})\" #if (em = Meteor.user().emails?[0]?.address)? then em else Meteor.userId()\n\t\t\tdate: date\n\t\t\tparent: pid\n\t\t}\n\t\t\n\t\tif pid?\n\t\t\tPosts.update pid,\n\t\t\t\t$set: lastCommentDate: date\n\t\t\t\t#$add: comments: [post] #<-- should this update the comments property?\n\t\telse\n\t\t\tpost.lastCommentDate = date  \n\t\t\n\t\tPosts.insert post\n\t\t#console.log post, (Posts.find date: post.date).fetch()\n\n\t'removePost':(id)->\n\t\tPosts.remove _id:id\n\t\n\t'removeAllPosts':()->\n\t\tPosts.remove {}\n###\n\t'addNames':()->\n\t\tMeteor.users.update 'tgHnK8gQ46GXRAGtv', $set: {'profile.fullname': 'Mike Tyson' }\n\t\tMeteor.users.update 'Xr9viZQzp6KbvX6b7', $set: {'profile.fullname': 'Evander Holyfield' }\n###"]}