)]}'
{"version":3,"file":"/packages/cfs:gridfs.js","sources":["cfs:gridfs/gridfs.client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,G;AACA,U;AACA,e;AACA,wC;AACA,0B;AACA,iN;AACA,4E;AACA,uB;AACA,E;AACA,8E;AACA,qB;AACA,G;AACA,2C;AACA,kB;AACA,yC;AACA,6D;;AAEA,+C;AACA,8B;AACA,K;AACA,E","sourcesContent":["/**\n * @public\n * @constructor\n * @param {String} name - The store name\n * @param {Object} options\n * @param {Function} [options.beforeSave] - Function to run before saving a file from the client. The context of the function will be the `FS.File` instance we're saving. The function may alter its properties.\n * @param {Number} [options.maxTries=5] - Max times to attempt saving a file\n * @returns {undefined}\n *\n * Creates a GridFS store instance on the client, which is just a shell object\n * storing some info.\n */\nFS.Store.GridFS = function(name, options) {\n  var self = this;\n  if (!(self instanceof FS.Store.GridFS))\n    throw new Error('FS.Store.GridFS missing keyword \"new\"');\n\n  return new FS.StorageAdapter(name, options, {\n    typeName: 'storage.gridfs'\n  });\n};\n"]}